{"version":3,"sources":["js/seller.js"],"names":["months","emails","getPrettyDate","date","newDate","split","month","getPrettyTime","time","App","args","props","id","state","selectedEmailId","currentSection","React","Component","index","findIndex","x","read","setState","tag","email","section","currentEmail","find","createElement","Sidebar","setSidebarSection","className","EmailList","filter","onEmailSelected","openEmail","EmailDetails","onDelete","deleteMessage","unreadCount","reduce","previous","msg","bind","deletedCount","href","onClick","EmailListItem","onEmailClicked","classes","selected","subject","from","message","length","map","render","document","getElementById"],"mappings":"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","file":"seller.3d47a713.map","sourceRoot":"..","sourcesContent":["var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nvar emails = [\n  {\n    \"from\": \"Saamer Mansoor\",\n    \"address\": \"i@codepen.io\",\n    \"time\": \"2016-10-07 15:35:14\",\n    \"message\": \"I live in Toronto, ON. I reviewed the financials, the required documents and the documents that you will provide. I would like to purchase 10 shares of the Single-family rental home for a total of $10,000. I look forward to hearing back from you\",\n    \"subject\": \"Single-family rental home\",\n    \"tag\": \"inbox\",\n    \"read\": \"false\"\n  },\n  {\n    \"from\": \"Barack Obama\",\n    \"address\": \"barack@obama.com\",\n    \"time\": \"2016-05-09 14:23:54\",\n    \"message\": \"I heard about your awesome website, and I'm excited to purchase some shares. Please accept my request for 200 shares in exchange for 125,000\",\n    \"subject\": \"Luxury Home-Big Family\",\n    \"tag\": \"inbox\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Christopher Medina\",\n    \"address\": \"dolor@luctusutpellentesque.net\",\n    \"time\": \"2015-07-03 21:48:27\",\n    \"message\": \"Woops, that last pull request messed up the csproj. Mauris. Morbi non sapien molestie orci tincidunt adipiscing. Mauris molestie pharetra\",\n    \"subject\": \"Broken PR?\",\n    \"tag\": \"inbox\",\n    \"read\": \"false\"\n  },\n  {\n    \"from\": \"Wylie Roberson\",\n    \"address\": \"mi@utnisi.edu\",\n    \"time\": \"2016-01-08 18:39:34\",\n    \"message\": \"Every wish you could read all this Lorem Ipsum stuff? Subornareornare lectus justo eu arcu. Morbi sit amet massa. Quisque porttitor eros nec tellus. Nunc lectus pede, ultrices\",\n    \"subject\": \"Learn latin in 10 days!\",\n    \"tag\": \"deleted\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Slack HQ\",\n    \"address\": \"fishbowl@slack.com\",\n    \"time\": \"2015-07-21 09:47:57\",\n    \"message\": \"Click here to consectetuer rhoncus. Nullam velit dui, semper et, lacinia vitae, sodales at, velit. Pellentesque ultricies dignissim lacus. Aliquam rutrum lorem ac risus. Morbi\",\n    \"subject\": \"Join the Fishbowl Team\",\n    \"tag\": \"inbox\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Ray Lamb\",\n    \"address\": \"ut.erat.Sed@volutpatNulla.co.uk\",\n    \"time\": \"2016-01-08 10:14:40\",\n    \"message\": \"Trepalium is going on tour! Duis cursus, diam at pretium aliquet, metus urna convallis erat, eget tincidunt dui augue eu tellus. Phasellus elit pede, malesuada vel, venenatis vel, faucibus id, libero. Donec consectetuer mauris\",\n    \"subject\": \"Concert tickets on sale\",\n    \"tag\": \"inbox\",\n    \"read\": \"false\"\n  },\n  {\n    \"from\": \"StackOverflow\",\n    \"address\": \"non@semmolestie.com\",\n    \"time\": \"2016-06-29 15:39:06\",\n    \"message\": \"You're almost done! Finish registering your account, and you'll be able to demand answers from random people that are smarter than you. Cum sociis natoque penatibus et magnis dis parturient\",\n    \"subject\": \"Verify your StackOverflow account\",\n    \"tag\": \"inbox\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Wylie Roberson\",\n    \"address\": \"mi@utnisi.edu\",\n    \"time\": \"2016-01-08 18:39:34\",\n    \"message\": \"Every wish you could read all this Lorem Ipsum stuff? Subornareornare lectus justo eu arcu. Morbi sit amet massa. Quisque porttitor eros nec tellus. Nunc lectus pede, ultrices\",\n    \"subject\": \"Learn latin in 10 days!\",\n    \"tag\": \"deleted\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Slack HQ\",\n    \"address\": \"fishbowl@slack.com\",\n    \"time\": \"2015-07-21 09:47:57\",\n    \"message\": \"Click here to consectetuer rhoncus. Nullam velit dui, semper et, lacinia vitae, sodales at, velit. Pellentesque ultricies dignissim lacus. Aliquam rutrum lorem ac risus. Morbi\",\n    \"subject\": \"Join the Fishbowl Team\",\n    \"tag\": \"inbox\",\n    \"read\": \"true\"\n  }\n]\n\n// Helper methods\nconst getPrettyDate = date => {\n  date = date.split(' ')[0];\n  const newDate = date.split('-');\n  const month = months[0];\n  return `${month} ${newDate[2]}, ${newDate[0]}`;\n};\n\n// Remove the seconds from the time\nconst getPrettyTime = date => {\n  const time = date.split(' ')[1].split(':');\n  return `${time[0]}:${time[1]}`;\n};\n\n/* App */\nclass App extends React.Component {\n  constructor(args) {\n    super(args);\n\n    // Assign unique IDs to the emails\n    const emails = this.props.emails;\n    let id = 0;\n    for (const email of emails) {\n      email.id = id++;\n    }\n\n    this.state = {\n      selectedEmailId: 0,\n      currentSection: 'inbox',\n      emails };\n\n  }\n\n  openEmail(id) {\n    const emails = this.state.emails;\n    const index = emails.findIndex(x => x.id === id);\n    emails[index].read = 'true';\n    this.setState({\n      selectedEmailId: id,\n      emails });\n\n  }\n\n  deleteMessage(id) {\n    // Mark the message as 'deleted'\n    const emails = this.state.emails;\n    const index = emails.findIndex(x => x.id === id);\n    emails[index].tag = 'deleted';\n\n    // Select the next message in the list\n    let selectedEmailId = '';\n    for (const email of emails) {\n      if (email.tag === this.state.currentSection) {\n        selectedEmailId = email.id;\n        break;\n      }\n    }\n\n    this.setState({\n      emails,\n      selectedEmailId });\n\n  }\n\n  setSidebarSection(section) {\n    let selectedEmailId = this.state.selectedEmailId;\n    if (section !== this.state.currentSection) {\n      selectedEmailId = '';\n    }\n\n    this.setState({\n      currentSection: section,\n      selectedEmailId });\n\n  }\n\n  render() {\n    const currentEmail = this.state.emails.find(x => x.id === this.state.selectedEmailId);\n    return (\n      React.createElement(\"div\", null,\n      React.createElement(Sidebar, {\n        emails: this.props.emails,\n        setSidebarSection: section => {this.setSidebarSection(section);} }),\n      React.createElement(\"div\", { className: \"inbox-container\" },\n      React.createElement(EmailList, {\n        emails: this.state.emails.filter(x => x.tag === this.state.currentSection),\n        onEmailSelected: id => {this.openEmail(id);},\n        selectedEmailId: this.state.selectedEmailId,\n        currentSection: this.state.currentSection }),\n      React.createElement(EmailDetails, {\n        email: currentEmail,\n        onDelete: id => {this.deleteMessage(id);} }))));\n  }}\n\n\n/* Sidebar */\nconst Sidebar = ({ emails, setSidebarSection }) => {\n  var unreadCount = emails.reduce(\n  function (previous, msg) {\n    if (msg.read !== \"true\") {\n      return previous + 1;\n    } else\n    {\n      return previous;\n    }\n  }.bind(this), 0);\n\n  var deletedCount = emails.reduce(\n  function (previous, msg) {\n    if (msg.tag === \"deleted\") {\n      return previous + 1;\n    } else\n    {\n      return previous;\n    }\n  }.bind(this), 0);\n\n  return (\n    React.createElement(\"div\", { id: \"sidebar\" },\n    React.createElement(\"div\", { className: \"sidebar__compose\" },\n    React.createElement(\"a\", { href: \"#\", className: \"btn compose\" }, \"Compose \",\n    React.createElement(\"span\", { className: \"fa fa-pencil\" }))),\n\n\n    React.createElement(\"ul\", { className: \"sidebar__inboxes\" },\n    React.createElement(\"li\", { onClick: () => {setSidebarSection('inbox');} }, React.createElement(\"a\", null,\n    React.createElement(\"span\", { className: \"fa fa-inbox\" }), \" Inbox\",\n    React.createElement(\"span\", { className: \"item-count\" }, unreadCount))),\n    React.createElement(\"li\", { onClick: () => {setSidebarSection('sent');} }, React.createElement(\"a\", null,\n    React.createElement(\"span\", { className: \"fa fa-paper-plane\" }), \" Sent\",\n    React.createElement(\"span\", { className: \"item-count\" }, \"0\"))),\n    React.createElement(\"li\", { onClick: () => {setSidebarSection('drafts');} }, React.createElement(\"a\", null,\n    React.createElement(\"span\", { className: \"fa fa-pencil-square-o\" }), \" Drafts\",\n    React.createElement(\"span\", { className: \"item-count\" }, \"0\"))),\n\n    React.createElement(\"li\", { onClick: () => {setSidebarSection('deleted');} }, React.createElement(\"a\", null,\n    React.createElement(\"span\", { className: \"fa fa-trash-o\" }), \" Trash\",\n    React.createElement(\"span\", { className: \"item-count\" }, deletedCount))))));\n};\n\n/* Email classes */\nconst EmailListItem = ({ email, onEmailClicked, selected }) => {\n  let classes = \"email-item\";\n  if (selected) {\n    classes += \" selected\";\n  }\n\n  return (\n    React.createElement(\"div\", { onClick: () => {onEmailClicked(email.id);}, className: classes },\n    React.createElement(\"div\", { className: \"email-item__unread-dot\", \"data-read\": email.read }),\n    React.createElement(\"div\", { className: \"email-item__subject truncate\" }, email.subject),\n    React.createElement(\"div\", { className: \"email-item__details\" },\n    React.createElement(\"span\", { className: \"email-item__from truncate\" }, email.from),\n    React.createElement(\"span\", { className: \"email-item__time truncate\" }, getPrettyDate(email.time)))));\n};\n\nconst EmailDetails = ({ email, onDelete }) => {\n  if (!email) {\n    return (\n      React.createElement(\"div\", { className: \"email-content empty\" }));\n  }\n\n  const date = `${getPrettyDate(email.time)} · ${getPrettyTime(email.time)}`;\n\n  const getDeleteButton = () => {\n    if (email.tag !== 'deleted') {\n      return React.createElement(\"span\", { onClick: () => {onDelete(email.id);}, className: \"delete-btn fa fa-trash-o\" });\n    }\n    return undefined;\n  };\n\n  return (\n    React.createElement(\"div\", { className: \"email-content\" },\n    React.createElement(\"div\", { className: \"email-content__header\" },\n    React.createElement(\"h3\", { className: \"email-content__subject\" }, email.subject),\n    React.createElement(\"button\", { className: \"button button--inbox js-modalBtn\" }, 'Accept proposal'),\n    React.createElement(\"button\", { className: \"button button--inbox button--secondary\" }, 'Reject proposal'),\n    React.createElement(\"div\", { className: \"email-content__time\" }, date),\n    React.createElement(\"div\", { className: \"email-content__from\" }, email.from)),\n    React.createElement(\"div\", { className: \"email-content__message\" }, email.message)))\n};\n\n/* EmailList contains a list of Email components */\nconst EmailList = ({ emails, onEmailSelected, selectedEmailId }) => {\n  if (emails.length === 0) {\n    return (\n      React.createElement(\"div\", { className: \"email-list empty\" }, \"Nothing to see here, great job!\"));\n  }\n\n  return (\n    React.createElement(\"div\", { className: \"email-list\" },\n\n    emails.map(email => {\n      return (\n        React.createElement(EmailListItem, {\n          onEmailClicked: id => {onEmailSelected(id);},\n          email: email,\n          selected: selectedEmailId === email.id }));\n\n    })));\n\n};\n\n\nReact.render(React.createElement(App, { emails }), document.getElementById('inbox'));\n"]}